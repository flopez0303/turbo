---
name: ((deployment_name))

tags:
  turbo: ((env_name))

releases:
- name: concourse
  version: latest
- name: garden-runc
  version: latest
- name: postgres
  version: latest
- name: credhub
  version: latest
- name: uaa
  version: latest
- name: backup-and-restore-sdk
  version: latest

instance_groups:
- name: db
  instances: 1
  azs: [z1]
  networks:
  - name: ((network_name))
    static_ips: ((db_static_ip))
  stemcell: trusty
  vm_type: ((db_vm_type))
  persistent_disk_type: ((db_persistent_disk_size))
  jobs:
  - release: postgres
    name: postgres
    provides:
      postgres: {as: db}
    properties:
      databases:
        port: 5432
        databases:
        - name: *concourse_db_name
        - name: *uaa_db_name
        - name: *credhub_db_name
        roles:
        - *concourse_db_role
        - name: *uaa_db_username
          password: *uaa_db_password
        - name: *credhub_db_username
          password: *credhub_db_password
        tls: 
          ca: ((/database-tls.ca))
          certificate: ((/database-tls.certificate))
          private_key: ((/database-tls.private_key))

- name: web
  instances: ((web_vm_count))
  azs: ((az_list))
  networks: [{name: ((network_name))}]
  stemcell: trusty
  vm_type: ((web_vm_type))
  vm_extensions:
  - web
  jobs:
  - release: concourse
    name: atc
    consumes:
      postgres: {from: db}
    properties:
      credhub:
        path_prefix: /concourse
        url: ((credhub_url))
        tls:
          ca_cert:
            certificate: ((/default_ca.certificate))
          insecure_skip_verify: false
        client_id: *concourse_client_username
        client_secret: *concourse_client_password
      tls_cert: ((/concourse_ssl.certificate))
      tls_key: ((/concourse_ssl.private_key))
      bind_port: 80
      tls_bind_port: 443
      basic_auth_username: admin
      basic_auth_password: ((concourse_admin_password))
      log_level: debug

      token_signing_key: ((token_signing_key))

      external_url: ((concourse_external_url))
      encryption_key: ((concourse_encryption_key))

      postgresql:
        sslmode: verify-ca
        ca_cert: ((/database-tls.ca))
        database: &concourse_db_name atc
        role: &concourse_db_role
          name: concourse
          password: ((postgres_concourse_password))

  - release: concourse
    name: tsa
    properties:
      log_level: debug
      host_key: ((tsa_host_key))
      token_signing_key: ((token_signing_key))
      authorized_keys: [((worker_key.public_key))]

  - name: uaa
    release: uaa
    consumes:
      database: {from: db}
    properties:
      encryption:
        active_key_label: primary
        encryption_keys:
        - label: primary
          passphrase: ((uaa_encryption_key_primary))
        - label: secondary
          passphrase: ((uaa_encryption_key_secondary))
      release_level_backup: true
      login:
        self_service_links_enabled: false
      bpm:
        enabled: false
      uaa:
        url: &uaa-url ((uaa_url))
        catalina_opts: -Djava.security.egd=file:/dev/./urandom -Xmx768m -XX:MaxMetaspaceSize=256m
        scim:
          users:
          - name: admin
            password: ((uaa-users-admin))
            groups:
              - scim.write
              - scim.read
              - bosh.admin
              - credhub.read
              - credhub.write
        clients:
          concourse_client:
            name: &concourse_client_username concourse_client
            override: true
            authorized-grant-types: client_credentials,password,refresh_token
            scope: ""
            authorities: credhub.read,credhub.write
            access-token-validity: 3600
            refresh-token-validity: 3600
            secret: &concourse_client_password ((concourse_client_password))
          credhub_cli:
            override: true
            authorized-grant-types: password,refresh_token
            scope: credhub.read,credhub.write
            authorities: uaa.resource
            access-token-validity: 30
            refresh-token-validity: 3600
            secret: ""
          credhub-admin:
            override: true
            authorized-grant-types: client_credentials
            scope: ""
            authorities: credhub.read,credhub.write
            access-token-validity: 3600
            secret: ((credhub_admin_password))
        admin: {client_secret: ((uaa_admin_password))}
        login: {client_secret: ((uaa-login))}
        zones: {internal: {hostnames: []}}
        sslCertificate: ((/uaa-tls.certificate))
        sslPrivateKey: ((/uaa-tls.private_key))
        jwt:
          revocable: true
          policy:
            active_key_id: key-1
            keys:
              key-1:
                signingKey: ((uaa-jwt.private_key))
      uaadb:
        db_scheme: postgresql
        port: 5432
        # This must currently be false unless the CA of the DB is added to the BOSH CA trust store
        tls_enabled: false 
        databases:
        - tag: uaa
          name: &uaa_db_name uaa
        roles: &uaa_db_role
        - tag: admin
          name: &uaa_db_username uaa
          password: &uaa_db_password ((postgres_uaa_password))
      login:
        saml:
          serviceProviderCertificate: ((/uaa-tls.certificate))
          serviceProviderKey: ((/uaa-tls.private_key))
          serviceProviderKeyPassword: ""

  - name: credhub
    release: credhub
    properties:
      credhub:
        log_level: warn
        tls: ((/credhub-tls))
        authentication:
          uaa:
            url: *uaa-url
            verification_key: ((uaa-jwt.public_key))
            ca_certs:
            - ((/uaa-tls.ca)) 
        data_storage: &credhub_data_storage
          type: postgres
          host: ((db_static_ip))
          port: 5432
          username: &credhub_db_username credhub
          password: &credhub_db_password ((postgres_credhub_password))
          database: &credhub_db_name credhub
          require_tls: true
          tls_ca: ((/database-tls.ca))
        encryption:
          keys: 
          - provider_name: int
            key_properties:
              encryption_password: ((credhub-encryption-password))
            active: true
          providers: 
          - name: int
            type: internal
        authorization:
          acls:
            enabled: false
          permissions:
          - path: /*
            actors:
            - uaa-user:credhub-admin
            operations:
            - read
            - write
            - delete
            - read_acl
            - write_acl
          - path: /concourse/*
            actors:
            - uaa-user:concourse_client
            operations:
            - read
            - read_acl


  - name: bbr-uaadb
    release: uaa
  - name: bbr-credhubdb
    release: credhub
    properties:
      release_level_backup: true
      credhub:
        data_storage:
          <<: *credhub_data_storage
  - name: database-backup-restorer
    release: backup-and-restore-sdk

- name: worker
  instances: ((worker_vm_count))
  azs: ((az_list))
  networks: [{name: ((network_name))}]
  stemcell: trusty
  vm_type: ((worker_vm_type))
  jobs:
  - release: concourse
    name: worker
    consumes: {baggageclaim: {from: worker-baggageclaim}}
    properties:
      drain_timeout: 10m
      tsa: {worker_key: ((worker_key))}

  - release: concourse
    name: baggageclaim
    properties: {log_level: debug}
    provides: {baggageclaim: {as: worker-baggageclaim}}

  - release: garden-runc
    name: garden
    properties:
      garden:
        listen_network: tcp
        listen_address: 0.0.0.0:7777

variables:
- name: /default_ca
  type: certificate
  options:
    is_ca: true
    common_name: ca
# DB
- name: /database-tls
  type: certificate
  options: 
    ca: /default_ca
    common_name: ((db_static_ip))
    alternative_names:
    - ((db_static_ip))
    - 127.0.0.1
# Concourse
- name: postgres_concourse_password
  type: password
- name: token_signing_key
  type: rsa
- name: tsa_host_key
  type: ssh
- name: worker_key
  type: ssh
- name: /concourse_ssl
  type: certificate
  options:
    ca: /default_ca
    common_name: ci.((domain_name))
    alternative_names: [ci.((domain_name))]
- name: concourse_encryption_key
  type: password
  options:
    length: 32
# Credhub
- name: postgres_credhub_password
  type: password
- name: credhub-encryption-password
  type: password
  options:
    length: 40
- name: /credhub-tls
  type: certificate
  options:
    ca: /default_ca
    common_name: ((credhub_dns))
    alternative_names:
    - ((credhub_dns))
    - 127.0.0.1
# - name: /database-tls
#   type: certificate
#   options: 
#     ca: credhub-ca
#     common_name: ((external-ip-address))
#     alternative_names:
#     - ((external-ip-address))
#     - ((internal-ip-address))
#     - 127.0.0.1
- name: postgres_uaa_password
  type: password
- name: /uaa-tls
  type: certificate
  options:
    ca: /default_ca
    common_name: ((uaa_dns))
    alternative_names:
    - ((uaa_dns))
    - 127.0.0.1
- name: uaa-jwt
  type: rsa
  options:
    key_length: 4096
- name: uaa-users-admin
  type: password
- name: uaa-login
  type: password
- name: concourse_client_password
  type: password
- name: uaa_encryption_key_primary
  type: password
  options:
    length: 40
- name: uaa_encryption_key_secondary
  type: password
  options:
    length: 40


stemcells:
- alias: trusty
  os: ubuntu-trusty
  version: ((stemcell_version))

update:
  canaries: 1
  max_in_flight: 3
  serial: false
  canary_watch_time: 30000-600000
  update_watch_time: 5000-600000
